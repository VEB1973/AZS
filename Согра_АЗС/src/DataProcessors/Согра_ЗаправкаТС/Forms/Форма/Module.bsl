
&НаСервере
Процедура ТСПриИзмененииНаСервере()
	Если НЕ ЗначениеЗаполнено(Объект.Водитель) Тогда
		Объект.Водитель = Объект.ТС.Водитель;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТСПриИзменении(Элемент)
	ТСПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаВыборКолонки1НаСервере()
	Объект.Колонка = Справочники.Согра_Колонки.НайтиПоРеквизиту("НомерКолонки", 1);
	
	//TODO: Статусы ТРК нужно будет подтягивать с контроллера как-то.
	Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Выключено;
	Элементы.КомандаГотовность.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыборКолонки1(Команда)
	КомандаВыборКолонки1НаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаВыборКолонки2НаСервере()
	Объект.Колонка = Справочники.Согра_Колонки.НайтиПоРеквизиту("НомерКолонки", 2);
	
	//TODO: Статусы ТРК нужно будет подтягивать с контроллера как-то.
	Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Выключено;
	Элементы.КомандаГотовность.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыборКолонки2(Команда)
	КомандаВыборКолонки2НаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаВыборКолонки3НаСервере()
	Объект.Колонка = Справочники.Согра_Колонки.НайтиПоРеквизиту("НомерКолонки", 3);
	
	//TODO: Статусы ТРК нужно будет подтягивать с контроллера как-то.
	Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Выключено;
	Элементы.КомандаГотовность.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыборКолонки3(Команда)
	КомандаВыборКолонки3НаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаВыборКолонки4НаСервере()
	Объект.Колонка = Справочники.Согра_Колонки.НайтиПоРеквизиту("НомерКолонки", 4);
	
	//TODO: Статусы ТРК нужно будет подтягивать с контроллера как-то.
	Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Выключено;
	Элементы.КомандаГотовность.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыборКолонки4(Команда)
	КомандаВыборКолонки4НаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаГотовностьНаСервере()
	Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Разрешение;
	
	Элементы.КомандаОстановкиОтпуска.Доступность = Истина;
	Элементы.КомандаЗавершитьОтпуск.Доступность = Ложь;
	Элементы.КомандаГотовность.Доступность = Ложь;
	
	//Если заправка завершилась, то регистрируем ее в базе
	//Если Тогда
		ЗарегистрироватьЗаправку();
	//КонецЕсли;	


КонецПроцедуры

&НаКлиенте
Процедура КомандаГотовность(Команда)
	КомандаГотовностьНаСервере();
КонецПроцедуры
	
&НаСервере
Процедура КомандаОстановкиОтпускаНаСервере()
	Если Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.СТОП Тогда
		Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Разрешение;
	Иначеесли	Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Разрешение Тогда
		Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.СТОП;
	Иначе
		Объект.Статус = "Ошибка статуса!";
	КонецЕсли;	
	
	Элементы.КомандаЗавершитьОтпуск.Доступность = Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.СТОП;
	Элементы.КомандаГотовность.Доступность = Ложь;
	
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура КомандаОстановкиОтпуска(Команда)
	КомандаОстановкиОтпускаНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаЗавершитьОтпускНаСервере()
	Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Выключено;
	Элементы.КомандаОстановкиОтпуска.Доступность = Ложь;
	Элементы.КомандаГотовность.Доступность = Истина;
	Элементы.КомандаЗавершитьОтпуск.Доступность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗавершитьОтпуск(Команда)
	КомандаЗавершитьОтпускНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьЗаправку()
	Док = Документы.Согра_Заправка.СоздатьДокумент();
	Док.Дата = ТекущаяДата();
	Док.Колонка = Объект.Колонка;
	Док.ТС = Объект.ТС;
	Док.Водитель = Объект.Водитель;
	Док.Объем = Объект.Объем;
	
	Попытка
		Док.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	Для Сч = 1 по 8 Цикл
		Попытка
			Колонка = Справочники.Согра_Колонки.НайтиПоРеквизиту("НомерКолонки", Сч);
			Элементы["КнопкаКолонка"+Сч].Доступность = ЗначениеЗаполнено(Колонка);
			Если ЗначениеЗаполнено(Колонка) Тогда
				Элементы["КнопкаКолонка"+Сч].Заголовок = Колонка.Наименование;
			Иначе
				Элементы["КнопкаКолонка"+Сч].Заголовок = "Колонка "+Сч;
			КонецЕсли;	
		Исключение
			
		КонецПопытки;	
	КонецЦикла;
	
	Объект.Статус = Перечисления.Согра_СтатусыКонтроллера.Выключено;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
	
		
	ПодключитьОбработчикОжидания("ОбновитьТабло", 1);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТабло()
	Элементы.ДекорацияНомерКолонки.Заголовок = "Колонка: " + Объект.Колонка;
	Элементы.ДекорацияОбъемТоплива.Заголовок = "Объем топлива: " + Объект.Объем;
	Элементы.ДекорацияСтатус.Заголовок = "Статус контроллера: " + Объект.Статус;
	ОшибкиТекст = "";
	Зпт = "";
	Если не ЗначениеЗаполнено(Объект.ТС) Тогда
		ОшибкиТекст = ОшибкиТекст + "Не выбрано ТС";
		Зпт = "; ";
	КонецЕсли;
	Если не ЗначениеЗаполнено(Объект.Водитель) Тогда
		ОшибкиТекст = ОшибкиТекст + Зпт+"Не выбран водитель";
		Зпт = "; ";
	КонецЕсли;
	Если не ЗначениеЗаполнено(Объект.Объем) Тогда
		ОшибкиТекст = ОшибкиТекст + Зпт+"Не заполнен объем";
		Зпт = "; ";
	КонецЕсли;
	Если не ЗначениеЗаполнено(Объект.Колонка) Тогда
		ОшибкиТекст = ОшибкиТекст + Зпт+"Не выбрана ТРК";
		Зпт = "; ";
	КонецЕсли;
	
	Элементы.ДекорацияОшибки.Заголовок = ?(СокрЛП(ОшибкиТекст)="","", "Ошибки: " + ОшибкиТекст);
КонецПроцедуры	

&НаКлиенте
Процедура ПриПовторномОткрытии()
	ЭтаФорма.Закрыть();
КонецПроцедуры



